// 说明使用的是proto3语法
syntax = "proto3";

// 说明最后生成的go文件是处在哪个目录哪个包中, .代表在当前目录生成, service代表生成的go文件的包名是service
option go_package = ".;service";

// 定义一个服务, 在这个服务中需要有一个方法, 这个方法可以接受客户端的参数, 再返回服务端的响应
// 定义一个service, 称为SayHello, 这个服务中有一个rpc方法, 称为SayHello
// 这个方法会发送一个HelloRequest, 返回一个HelloResponse
service SayHello {
  rpc SayHello(HelloRequest) returns (HelloResponse) {}
}

// message关键字, 可以理解为Go中的结构体
// 注意变量后面的"赋值", 这里是定义这个变量在这个message中的位置
message HelloRequest {
  string requestName = 1;
  // int64 age = 2;
}

message HelloResponse {
  string responseMsg = 1;
}